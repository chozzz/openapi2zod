// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`parseOpenApiToZod v2 should generate correct schema for operationId "allOfExample" 1`] = `
{
  "$ref": "#/definitions/allOfExample",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": {
    "allOfExample": {
      "allOf": [
        {
          "properties": {
            "id": {
              "description": "Unique identifier",
              "type": "string",
            },
            "name": {
              "description": "Name of the entity",
              "type": "string",
            },
          },
          "required": [
            "id",
            "name",
          ],
          "type": "object",
        },
        {
          "properties": {
            "additionalProperty": {
              "description": "An additional property required by this endpoint.",
              "type": "string",
            },
          },
          "required": [
            "additionalProperty",
          ],
          "type": "object",
        },
      ],
      "description": "{"description":"This endpoint accepts a request body that must conform to all of the specified schemas.","operationId":"allOfExample","path":"/api/v1/example/allOfExample","method":"post"}",
    },
  },
}
`;

exports[`parseOpenApiToZod v2 should generate correct schema for operationId "anyOfExample" 1`] = `
{
  "$ref": "#/definitions/anyOfExample",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": {
    "anyOfExample": {
      "anyOf": [
        {
          "additionalProperties": false,
          "properties": {
            "option1": {
              "type": "string",
            },
          },
          "required": [
            "option1",
          ],
          "type": "object",
        },
        {
          "additionalProperties": false,
          "properties": {
            "option2": {
              "type": "integer",
            },
          },
          "required": [
            "option2",
          ],
          "type": "object",
        },
      ],
      "description": "{"description":"This endpoint accepts a request body that can be any combination of the specified schemas.","operationId":"anyOfExample","path":"/api/v1/example/anyOfExample","method":"post"}",
    },
  },
}
`;

exports[`parseOpenApiToZod v2 should generate correct schema for operationId "notExample" 1`] = `
{
  "$ref": "#/definitions/notExample",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": {
    "notExample": {
      "description": "{"description":"This endpoint accepts a request body that must not conform to a specified schema.","operationId":"notExample","path":"/api/v1/example/notExample","method":"post"}",
    },
  },
}
`;

exports[`parseOpenApiToZod v2 should generate correct schema for operationId "oneOfExample" 1`] = `
{
  "$ref": "#/definitions/oneOfExample",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": {
    "oneOfExample": {
      "anyOf": [
        {
          "additionalProperties": false,
          "properties": {
            "type": {
              "enum": [
                "A",
              ],
              "type": "string",
            },
            "value": {
              "type": "string",
            },
          },
          "required": [
            "type",
            "value",
          ],
          "type": "object",
        },
        {
          "additionalProperties": false,
          "properties": {
            "amount": {
              "type": "number",
            },
            "type": {
              "enum": [
                "B",
              ],
              "type": "string",
            },
          },
          "required": [
            "type",
            "amount",
          ],
          "type": "object",
        },
      ],
      "description": "{"description":"This endpoint accepts a request body that must conform to one of the specified schemas.","operationId":"oneOfExample","path":"/api/v1/example/oneOfExample","method":"post"}",
    },
  },
}
`;
